```{r setup, include=FALSE}
set.seed(1)
n <- 10000
x <- rnorm(n, 2, 4) # I choose arbitrary values for mu and sigma
y <- rnorm(n, 1, 1)
z <- rnorm(n, -3, 2)
obs <- x+y+z
grid <- seq(-15, 15, length.out = 1000)
hist(obs, probability = TRUE)
lines(density(obs), col = "chartreuse4")
lines(grid, dnorm(grid, mean = 2+1-3,sd = sqrt(16+1+4)), col = "darkmagenta")
#Var(X+Y+Z)=(because X,Y,Z independent)
#=Var(X)+Var(Y)+Var(Z) = 4^2 +1^2 +2^2
knitr::opts_chunk$set(echo = TRUE)
x <- rnorm(n = 1, mean = 0, sd = 1)
# equivalent to rnorm(1,0,1), or rnorm(1)
print(x)
set.seed(1)
x <- rnorm(n = 1, mean = 0, sd = 1)
# equivalent to rnorm(1,0,1), or rnorm(1)
print(x)
y <- rnorm(n = 1, mean = 0, sd = 1)
# equivalent to rnorm(1,0,1), or rnorm(1)
print(y)
# install.packages('lme4')
# install.packages('nlme')
# install.packages('emmeans')
# install.packages("ggplot2")
# install.packages("pbkrtest")
# install.packages("lmerTest")
# install.packages("sjPlot")
# install.packages("writexl")
# install.packages("drop1")
# install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
library(drop1)
library(car)
install.packages('lme4')
install.packages('lme4')
install.packages('nlme')
install.packages('emmeans')
install.packages("ggplot2")
install.packages("pbkrtest")
install.packages("lmerTest")
install.packages("sjPlot")
install.packages("writexl")
install.packages("drop1")
install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
library(drop1)
install.packages("drop1")
install.packages('lme4')
install.packages('nlme')
install.packages('emmeans')
install.packages("ggplot2")
install.packages("pbkrtest")
install.packages("lmerTest")
install.packages("sjPlot")
install.packages("writexl")
install.packages("drop1")
install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
library(drop1)
install.packages("drop1")
library(car)
# Set WD
setwd('/Volumes/methlab/Students/Arne/AOC/scripts/stats')
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# load data
dat = read.csv('/Volumes/methlab/Students/Arne/AOC/data/features/merged_data_nback.csv')
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
# Model for Accurac
Load = as.factor(dat$Condition)
# Model for Accurac
glmm_accuracy <- glmer(Accuracy ~ dat$Condition + (1|Subject), data = dat, REML = TRUE)
# Model for Accurac
glmm_accuracy <- glmer(Accuracy ~ dat$Condition + (1|dat$ID), data = dat, REML = TRUE)
# Model for Accurac
glmm_accuracy <- glmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat, REML = TRUE)
head(dat)
# Model for Accurac
glmm_accuracy <- glmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
# Model for Accurac
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Accuracy
glmm_accuracy <- glmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Reaction Time
glmm_rt <- lmer(ReactionTime ~ Load + (1|Subject), data = dat)
summary(glmm_rt)
glmm_accuracy <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_rt <- summary(glmm_rt)[["coefficients"]]
# Display models
tab_model(glmm_accuracy, glmm_rt)
glmm_accuracy
glmm_rt
report(glmm_rt)
# Coefficients Table for Accuracy Model
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy_table <- data.frame(coeff_accuracy)
# Display the table
print(coeff_accuracy_table)
# Coefficients Table for Reaction Time Model
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt_table <- data.frame(coeff_rt)
# Display the table
print(coeff_rt_table)
# Visualising Fixed Effects for Accuracy Model
library(ggplot2)
accuracy_plot <- ggplot(coeff_accuracy_table, aes(x = rownames(coeff_accuracy_table), y = Estimate)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = Estimate - Std.Error, ymax = Estimate + Std.Error), width = 0.2) +
labs(title = "Fixed Effects: Accuracy Model", x = "Condition", y = "Coefficient Estimate")
# Visualising Fixed Effects for Reaction Time Model
rt_plot <- ggplot(coeff_rt_table, aes(x = rownames(coeff_rt_table), y = Estimate)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = Estimate - Std.Error, ymax = Estimate + Std.Error), width = 0.2) +
labs(title = "Fixed Effects: Reaction Time Model", x = "Condition", y = "Coefficient Estimate")
# Display plots
print(accuracy_plot)
print(rt_plot)
# ANOVA Results for Accuracy Model
anova_accuracy <- Anova(glmm_accuracy, type = "II")
print(anova_accuracy)
# ANOVA Results for Reaction Time Model
anova_rt <- Anova(glmm_rt, type = "II")
print(anova_rt)
# Model
glmm_gaze <- glmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
# Model
glmm_gaze <- lmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_gaze)
# Anova
Anova(glmm_gaze, type = "II")
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
# Display models
tab_model(glmm_gaze)
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
coeff_gaze
coeff_gaze
# Model
glmm_alpha <- lmer(dat$AlphaPower ~ dat$GazeDeviation * dat$Condition + (1|dat$ID), data = dat)
summary(glmm_alpha)
# Anova
Anova(glmm_alpha, type = "III")
# Dropping terms and finalizing model if needed
s_alpha <- drop1(glmm_alpha)
glmm_alpha_final <- get_model(s_alpha)
summary(glmm_alpha_final)
# Extract coefficients
coeff_alpha <- summary(glmm_alpha_final)[["coefficients"]]
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# load data
dat = read.csv('/Volumes/methlab/Students/Arne/AOC/data/features/merged_data_sternberg.csv')
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# load data
dat = read.csv('/Volumes/methlab/Students/Arne/AOC/data/features/merged_data_sternberg.csv')
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt
# Model
glmm_gaze <- lmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_gaze)
# Anova
Anova(glmm_gaze, type = "II")
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
coeff_gaze
# Model
glmm_alpha <- lmer(dat$AlphaPower ~ dat$GazeDeviation * dat$Condition + (1|dat$ID), data = dat)
summary(glmm_alpha)
# Anova
Anova(glmm_alpha, type = "III")
