p < 0.01  ~ "**",
p < 0.05  ~ "*",
TRUE      ~ ""
)
# ---- fixed effects ----
fx <- broom.mixed::tidy(model, effects = "fixed", conf.int = TRUE)
has_stat <- "statistic" %in% names(fx)
has_se   <- "std.error" %in% names(fx)
fixed_tbl <- fx %>%
transmute(
Variable = prettify_terms(term),
`β`      = round(estimate, 2),
`SE`     = if (has_se) round(std.error, 2) else NA_real_,
`CI`     = paste0(round(conf.low, 2), " – ", round(conf.high, 2)),
`t-value`= if (has_stat) round(statistic, 2) else NA_real_,
p_num    = p_base(p.value),
p_star   = p_stars(p.value),
`p-value`= ""  # placeholder; we’ll compose with bold stars
)
# ---- variance components (SDs) ----
ran <- tryCatch(
broom.mixed::tidy(model, effects = "ran_pars", scales = "sdcor"),
error = function(e) NULL
)
if (!is.null(ran) && nrow(ran) > 0) {
var_tbl <- ran %>%
dplyr::filter(grepl("^sd__", term) | term %in% c("sigma","residual__sd")) %>%
mutate(
Component = dplyr::case_when(
term %in% c("sigma","residual__sd") ~ "Residual",
TRUE ~ dplyr::coalesce(group, term)
),
SD = round(estimate, 2)
) %>%
select(Variance = Component, SD)
} else {
sig <- tryCatch(stats::sigma(model), error = function(e) NA_real_)
var_tbl <- tibble::tibble(Variance = "Residual", SD = round(sig, 2))
}
ll <- tryCatch(as.numeric(stats::logLik(model)), error = function(e) NA_real_)
var_tbl <- var_tbl %>%
mutate(`Goodness of fit` = ifelse(dplyr::row_number() == 1,
paste0("Log likelihood  ", round(ll, 1)),
""))
# ---- flextables ----
ft_top <- flextable(fixed_tbl) %>% autofit()
ft_top <- bold(ft_top, part = "header", bold = TRUE)
# compose p-value with bold stars
ft_top <- compose(
ft_top, j = "p-value",
value = as_paragraph(
as_chunk(p_num),
as_chunk(p_star, props = officer::fp_text(bold = TRUE))
)
)
# hide helper columns
ft_top <- flextable::delete_columns(ft_top, c("p_num","p_star"))
ft_var <- flextable(var_tbl) %>% autofit()
ft_var <- bold(ft_var, part = "header", bold = TRUE)
# ---- export ----
title_txt <- paste0(deparse(formula(model)))
doc <- read_docx() %>%
# Bold title without numbering
body_add_fpar(fpar(ftext(title_txt, fp_text(bold = TRUE)))) %>%
body_add_par("") %>%                # small breathing room
body_add_flextable(ft_top) %>%
body_add_par("") %>%                # make the next title clearly separate
body_add_fpar(fpar(ftext("Variance components", fp_text(bold = TRUE)))) %>%
body_add_par("") %>%
body_add_flextable(ft_var)
print(doc, target = file_path)
}
# GLMM Stats for AOC N-back
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
#library(drop1)
library(car)
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# printing smaller p-values than e-16
# https://stackoverflow.com/questions/6970705/why-cant-i-get-a-p-value-smaller-than-2-2e-16
# load data
dat = read.csv('/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/data/features/merged_data_nback.csv')
dat <- na.omit(dat)
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
######################
##### Behavioral #####
######################
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt
# Save model overview
export_model_table(glmm_accuracy, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_acc.docx')
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
export_model_table(glmm_ONLYalpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_alpha_by_cond.docx')
rlang::last_trace()
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
export_model_table(glmm_ONLYalpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_alpha_by_cond.docx')
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
export_model_table(glmm_ONLYalpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_alpha_by_cond.docx')
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
export_model_table(glmm_ONLYalpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_alpha_by_cond.docx')
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
export_model_table(glmm_ONLYalpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_alpha_by_cond.docx')
# GLMM Stats for AOC N-back
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
#library(drop1)
library(car)
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# printing smaller p-values than e-16
# https://stackoverflow.com/questions/6970705/why-cant-i-get-a-p-value-smaller-than-2-2e-16
# load data
dat = read.csv('/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/data/features/merged_data_nback.csv')
dat <- na.omit(dat)
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
######################
##### Behavioral #####
######################
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt
# Save model overview
export_model_table(glmm_accuracy, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_acc.docx')
export_model_table(glmm_rt, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_rt.docx')
######################
######## Gaze ########
######################
# Model
glmm_gaze <- lmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_gaze)
# Anova
Anova(glmm_gaze, type = "II")
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
coeff_gaze
# Save model overview
export_model_table(glmm_gaze, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_gaze.docx')
######################
####### Alpha ########
######################
# Model
glmm_ONLYalpha <- lmer(dat$AlphaPower ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_ONLYalpha)
# Model
glmm_alpha <- lmer(dat$AlphaPower ~ dat$GazeDeviation * dat$Condition + (1|dat$ID), data = dat)
summary(glmm_alpha)
# Anova
Anova(glmm_alpha, type = "III")
# Dropping terms and finalizing model if needed
s_alpha <- drop1(glmm_alpha)
#glmm_alpha_final <- get_model(s_alpha)
#summary(glmm_alpha_final)
#Anova(glmm_alpha_final, type = "II")
# Extract coefficients
#coeff_alpha <- summary(glmm_alpha_final)[["coefficients"]]
# Display models
#tab_model(glmm_alpha_final)
# Save model overview
export_model_table(glmm_ONLYalpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_alpha_by_cond.docx')
export_model_table(glmm_alpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_alpha.docx')
# GLMM Stats for AOC Sternberg
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
#library(drop1)
library(car)
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# printing smaller p-values than e-16
# https://stackoverflow.com/questions/6970705/why-cant-i-get-a-p-value-smaller-than-2-2e-16
# load data
dat = read.csv('/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/data/features/merged_data_sternberg.csv')
dat = na.omit(dat)
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
######################
##### Behavioral #####
######################
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt
# Save model overview
export_model_table(glmm_accuracy, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_sternberg_glmm_acc.docx')
export_model_table(glmm_rt, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_sternberg_glmm_rt.docx')
######################
######## Gaze ########
######################
# Model
glmm_gaze <- lmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_gaze)
# Anova
Anova(glmm_gaze, type = "II")
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
coeff_gaze
# Save model overview
export_model_table(glmm_gaze, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_sternberg_glmm_gaze.docx')
######################
####### Alpha ########
######################
# Model
glmm_ONLYalpha <- lmer(dat$AlphaPower ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_ONLYalpha)
# Model
glmm_alpha <- lmer(dat$AlphaPower ~ dat$GazeDeviation * dat$Condition + (1|dat$ID), data = dat)
summary(glmm_alpha)
# Anova
Anova(glmm_alpha, type = "III")
# Dropping terms and finalizing model if needed
s_alpha <- drop1(glmm_alpha)
#glmm_alpha_final <- get_model(s_alpha)
#summary(glmm_alpha_final)
#Anova(glmm_alpha_final, type = "II")
# Extract coefficients
#coeff_alpha <- summary(glmm_alpha_final)[["coefficients"]]
# Display models
#tab_model(glmm_alpha_final)
# Save model overview
export_model_table(glmm_ONLYalpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_sternberg_glmm_alpha_by_cond.docx')
export_model_table(glmm_alpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_sternberg_glmm_alpha.docx')
# GLMM Stats for AOC N-back
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
#library(drop1)
library(car)
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# printing smaller p-values than e-16
# https://stackoverflow.com/questions/6970705/why-cant-i-get-a-p-value-smaller-than-2-2e-16
# load data
dat = read.csv('/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/data/features/merged_data_nback.csv')
dat <- na.omit(dat)
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
######################
##### Behavioral #####
######################
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt
# Save model overview
export_model_table(glmm_accuracy, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_acc.docx')
export_model_table(glmm_rt, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_rt.docx')
######################
######## Gaze ########
######################
# Model
glmm_gaze <- lmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_gaze)
# Anova
Anova(glmm_gaze, type = "II")
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
coeff_gaze
# Save model overview
export_model_table(glmm_gaze, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_gaze.docx')
######################
####### Alpha ########
######################
# Model
glmm_ONLYalpha <- lmer(dat$AlphaPower ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_ONLYalpha)
# Model
glmm_alpha <- lmer(dat$AlphaPower ~ dat$GazeDeviation * dat$Condition + (1|dat$ID), data = dat)
summary(glmm_alpha)
# Anova
Anova(glmm_alpha, type = "III")
# Dropping terms and finalizing model if needed
s_alpha <- drop1(glmm_alpha)
#glmm_alpha_final <- get_model(s_alpha)
#summary(glmm_alpha_final)
#Anova(glmm_alpha_final, type = "II")
# Extract coefficients
#coeff_alpha <- summary(glmm_alpha_final)[["coefficients"]]
# Display models
#tab_model(glmm_alpha_final)
# Save model overview
export_model_table(glmm_ONLYalpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_alpha_by_cond.docx')
export_model_table(glmm_alpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_nback_glmm_alpha.docx')
# GLMM Stats for AOC Sternberg
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
#library(drop1)
library(car)
source("/Users/Arne/Documents/GitHub/functions/export_model_table.R")
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# printing smaller p-values than e-16
# https://stackoverflow.com/questions/6970705/why-cant-i-get-a-p-value-smaller-than-2-2e-16
# load data
dat = read.csv('/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/data/features/merged_data_sternberg.csv')
dat = na.omit(dat)
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
######################
##### Behavioral #####
######################
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt
# Save model overview
export_model_table(glmm_accuracy, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_sternberg_glmm_acc.docx')
export_model_table(glmm_rt, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_sternberg_glmm_rt.docx')
######################
######## Gaze ########
######################
# Model
glmm_gaze <- lmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_gaze)
# Anova
Anova(glmm_gaze, type = "II")
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
coeff_gaze
# Save model overview
export_model_table(glmm_gaze, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_sternberg_glmm_gaze.docx')
######################
####### Alpha ########
######################
# Model
glmm_ONLYalpha <- lmer(dat$AlphaPower ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_ONLYalpha)
# Model
glmm_alpha <- lmer(dat$AlphaPower ~ dat$GazeDeviation * dat$Condition + (1|dat$ID), data = dat)
summary(glmm_alpha)
# Anova
Anova(glmm_alpha, type = "III")
# Dropping terms and finalizing model if needed
s_alpha <- drop1(glmm_alpha)
#glmm_alpha_final <- get_model(s_alpha)
#summary(glmm_alpha_final)
#Anova(glmm_alpha_final, type = "II")
# Extract coefficients
#coeff_alpha <- summary(glmm_alpha_final)[["coefficients"]]
# Display models
#tab_model(glmm_alpha_final)
# Save model overview
export_model_table(glmm_ONLYalpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_sternberg_glmm_alpha_by_cond.docx')
export_model_table(glmm_alpha, '/Volumes/g_psyplafor_methlab$/Students/Arne/AOC/figures/stats/glmm/AOC_sternberg_glmm_alpha.docx')
