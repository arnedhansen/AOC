ggdist::stat_halfeye(
aes(color = Condition,
fill = after_scale(lighten(color, 0.5))),
adjust = 0.5,
width = 0.5,
height = 0.6,
.width = 0,              # removes the middle line along the data
justification = 1.55,   # negative value places the density on the left
side = "left",
) +
# Boxplot layer using the same colour as the density
geom_boxplot(
aes(color = Condition,
fill = after_scale(lighten(color, 0.5))),
width = 0.35,
outlier.shape = NA
) +
# Jittered data points (adjusting jitter to the x-axis because x is now categorical)
geom_point(
aes(color = Condition,
fill = after_scale(lighten(color, 0.5))),
shape = 21,
stroke = 0.4,
size = 3,
position = position_jitter(seed = 1, width = 0.125),
alpha = 0.65
) +
geom_point(
aes(fill = Condition),
color = "transparent",
shape = 21,
stroke = 0.4,
size = .25,
alpha = 0.4,
position = position_jitter(seed = 1, width = 0.125)
) +
# Add median value as text, nudged to the right of the boxplot
# stat_summary(
#   geom = "text",
#   fun = "median",
#   aes(label = round(after_stat(y), 2), color = Condition),
#   family = "Roboto Mono",
#   fontface = "bold",
#   size = 4.5,
#   nudge_y = 12.3
# ) +
# Commenting out sample size addition
# stat_summary(
#   geom = "text",
#   fun.data = add_sample,
#   aes(label = paste("n =", after_stat(label), color = Condition)),
#   family = "Roboto Mono",
#   size = 4,
#   nudge_x = 0.3
# ) +
# Set manual colours for consistency
scale_color_manual(values = pal, guide = "none") +
scale_fill_manual(values = pal, guide = "none") +
# Define labels and titles (now Condition on x-axis, data on y-axis)
labs(
x = "Condition",
y = y_lab,
title = titles[i],
subtitle = paste("N-back", titles[i], "by Condition")
) +
theme_minimal(base_family = "Zilla Slab", base_size = 15) +
theme(
plot.background = element_rect(fill = "white", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),  # remove vertical grid lines
axis.ticks = element_blank(),
axis.text.x = element_text(family = "Roboto Mono"),
axis.text.y = element_text(family = "Roboto Mono", size = 15),
axis.title.y = element_text(margin = margin(r = 10), size = 16),
plot.subtitle = element_text(
colour = "grey40", hjust = 0,
margin = margin(0, 0, 20, 0)
),
plot.title.position = "plot",
plot.margin = margin(15, 15, 10, 15)
)
# Adjust the y-axis
# "Accuracy", "ReactionTime", "GazeDeviation", "GazeStd", "MSRate", "Fixations", "Saccades", "AlphaPower", "IAF"
if(var == "Accuracy") {
p <- p + scale_y_continuous(
limits = c(70, 100),
breaks = seq(75, 100, by = 5),
expand = c(0.001, 0.001)
)
}
if(var == "GazeDeviation") {
p <- p + scale_y_continuous(
limits = c(0, 60),
breaks = seq(0, 60, by = 20),
expand = c(0.001, 0.001)
)
}
if(var == "MSRate") {
p <- p + scale_y_continuous(
limits = c(0, 3),
breaks = seq(0, 3, by = 1),
expand = c(0.001, 0.001)
)
}
if(var == "Fixations") {
p <- p + scale_y_continuous(
limits = c(0, 7),
breaks = seq(0, 7, by = 1),
expand = c(0.001, 0.001)
)
}
if(var == "IAF") {
p <- p + scale_y_continuous(
limits = c(8, 13),
breaks = seq(8, 13, by = 1),
expand = c(0.001, 0.001)
)
}
# Save the plot as a PNG file
ggsave(filename = file.path(output_dir, paste0("AOC_stats_rainclouds_", save_name, "_nback.png")),
plot = p, width = 8, height = 6, dpi = 300)
}
warnings()
# GLMM Stats for AOC Sternberg
install.packages('lme4')
install.packages('nlme')
install.packages('emmeans')
install.packages("ggplot2")
install.packages("pbkrtest")
install.packages("lmerTest")
install.packages("sjPlot")
install.packages("writexl")
install.packages("drop1")
install.packages("car")
library(lme4)
# GLMM Stats for AOC Sternberg
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
library(drop1)
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
install.packages("drop1")
# GLMM Stats for AOC Sternberg
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
#library(drop1)
library(car)
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# printing smaller p-values than e-16
# https://stackoverflow.com/questions/6970705/why-cant-i-get-a-p-value-smaller-than-2-2e-16
# load data
dat = read.csv('/Volumes/methlab/Students/Arne/AOC/data/features/merged_data_sternberg.csv')
# GLMM Stats for AOC Sternberg
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
#library(drop1)
library(car)
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# printing smaller p-values than e-16
# https://stackoverflow.com/questions/6970705/why-cant-i-get-a-p-value-smaller-than-2-2e-16
# load data
dat = read.csv('/Volumes/methlab/Students/Arne/AOC/data/features/merged_data_sternberg.csv')
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
######################
##### Behavioral #####
######################
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
View(dat)
# GLMM Stats for AOC N-back
install.packages('lme4')
install.packages('nlme')
install.packages('emmeans')
install.packages("ggplot2")
install.packages("pbkrtest")
install.packages("lmerTest")
install.packages("sjPlot")
install.packages("writexl")
install.packages("drop1")
install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
library(drop1)
# GLMM Stats for AOC N-back
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
#library(drop1)
library(car)
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# printing smaller p-values than e-16
# https://stackoverflow.com/questions/6970705/why-cant-i-get-a-p-value-smaller-than-2-2e-16
# load data
dat = read.csv('/Volumes/methlab/Students/Arne/AOC/data/features/merged_data_nback.csv')
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
######################
##### Behavioral #####
######################
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
# Model for Accuracy
glmm_accuracy <- glmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
sapply(dat, function(x) sum(is.na(x)))
sapply(dat, function(x) sum(is.na(x)))
# GLMM Stats for AOC N-back
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
#library(drop1)
library(car)
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# printing smaller p-values than e-16
# https://stackoverflow.com/questions/6970705/why-cant-i-get-a-p-value-smaller-than-2-2e-16
# load data
dat = read.csv('/Volumes/methlab/Students/Arne/AOC/data/features/merged_data_nback.csv')
dat <- na.omit(dat)
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
######################
##### Behavioral #####
######################
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt
# Display models
######################
######## Gaze ########
######################
# Model
glmm_gaze <- lmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_gaze)
# Anova
Anova(glmm_gaze, type = "II")
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
coeff_gaze
# Display models
######################
####### Alpha ########
######################
# Model
glmm_alpha <- lmer(dat$AlphaPower ~ dat$GazeDeviation * dat$Condition + (1|dat$ID), data = dat)
summary(glmm_alpha)
# Anova
Anova(glmm_alpha, type = "III")
# Dropping terms and finalizing model if needed
s_alpha <- drop1(glmm_alpha)
glmm_alpha_final <- get_model(s_alpha)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt
# Model
glmm_gaze <- lmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_gaze)
# Anova
Anova(glmm_gaze, type = "II")
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
coeff_gaze
# Model
glmm_alpha <- lmer(dat$AlphaPower ~ dat$GazeDeviation * dat$Condition + (1|dat$ID), data = dat)
summary(glmm_alpha)
# GLMM Stats for AOC Sternberg
#install.packages('lme4')
#install.packages('nlme')
#install.packages('emmeans')
#install.packages("ggplot2")
#install.packages("pbkrtest")
#install.packages("lmerTest")
#install.packages("sjPlot")
#install.packages("writexl")
#install.packages("drop1")
#install.packages("car")
library(lme4)
library(nlme)
library(emmeans)
library(ggplot2)
library(pbkrtest)
library(lmerTest)
library(sjPlot)
library("writexl")
library("lm.beta")
#library(drop1)
library(car)
# Set WD
setwd('/Users/Arne/Documents/GitHub/AOC/4_stats')
# no scientific notation, exact p-values
options(scipen=999) # default = 0
options(scipen=0)
# printing smaller p-values than e-16
# https://stackoverflow.com/questions/6970705/why-cant-i-get-a-p-value-smaller-than-2-2e-16
# load data
dat = read.csv('/Volumes/methlab/Students/Arne/AOC/data/features/merged_data_sternberg.csv')
dat = na.omit(dat)
# make sure, the vars are factors
dat$ID = as.factor(dat$ID)
dat$Condition = as.factor(dat$Condition)
######################
##### Behavioral #####
######################
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Anova
Anova(glmm_accuracy, type = "II")
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt
# Display models
######################
######## Gaze ########
######################
# Model
glmm_gaze <- lmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_gaze)
# Anova
Anova(glmm_gaze, type = "II")
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
coeff_gaze
# Display models
######################
####### Alpha ########
######################
# Model
glmm_alpha <- lmer(dat$AlphaPower ~ dat$GazeDeviation * dat$Condition + (1|dat$ID), data = dat)
summary(glmm_alpha)
# Anova
Anova(glmm_alpha, type = "III")
# Dropping terms and finalizing model if needed
s_alpha <- drop1(glmm_alpha)
glmm_alpha_final <- get_model(s_alpha)
summary(glmm_accuracy)
# Model for Accuracy
glmm_accuracy <- lmer(dat$Accuracy ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_accuracy)
# Model for Reaction Time
glmm_rt <- lmer(dat$ReactionTime ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_rt)
# Anova
Anova(glmm_rt, type = "II")
# Extract coefficients
coeff_accuracy <- summary(glmm_accuracy)[["coefficients"]]
coeff_accuracy
coeff_rt <- summary(glmm_rt)[["coefficients"]]
coeff_rt
# Model
glmm_gaze <- lmer(dat$GazeDeviation ~ dat$Condition + (1|dat$ID), data = dat)
summary(glmm_gaze)
# Anova
Anova(glmm_gaze, type = "II")
# Extract coefficients
coeff_gaze <- summary(glmm_gaze)[["coefficients"]]
coeff_gaze
# Model
glmm_alpha <- lmer(dat$AlphaPower ~ dat$GazeDeviation * dat$Condition + (1|dat$ID), data = dat)
summary(glmm_alpha)
# Anova
Anova(glmm_alpha, type = "III")
